/* 
 * Get into Teaching API - V1
 *
 *   Provides a RESTful API for integrating with the Get into Teaching CRM.    The Get into Teaching (GIT) API sits in front of the GIT CRM, which uses the [Microsoft Dynamics365](https://docs.microsoft.com/en-us/dynamics365/) platform (the [Customer Engagement](https://docs.microsoft.com/en-us/dynamics365/customerengagement/on-premises/developer/overview) module is used for storing Candidate information and the [Marketing](https://docs.microsoft.com/en-us/dynamics365/marketing/developer/using-events-api) module for managing Events).    The GIT API aims to provide:    * Simple, task-based RESTful APIs.  * Message queueing (while the GIT CRM is offline for updates).  * Validation to ensure consistency across services writing to the GIT CRM.                          
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using GetIntoTeachingApi.Client.Client;
using GetIntoTeachingApi.Client.Api;
using GetIntoTeachingApi.Client.Model;

namespace GetIntoTeachingApi.Client.Test
{
    /// <summary>
    ///  Class for testing TypesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class TypesApiTests
    {
        private TypesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new TypesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TypesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' TypesApi
            //Assert.IsInstanceOfType(typeof(TypesApi), instance, "instance is a TypesApi");
        }

        
        /// <summary>
        /// Test GetCandidateChannels
        /// </summary>
        [Test]
        public void GetCandidateChannelsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetCandidateChannels();
            //Assert.IsInstanceOf<List<TypeEntity>> (response, "response is List<TypeEntity>");
        }
        
        /// <summary>
        /// Test GetCandidateInitialTeacherTrainingYears
        /// </summary>
        [Test]
        public void GetCandidateInitialTeacherTrainingYearsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetCandidateInitialTeacherTrainingYears();
            //Assert.IsInstanceOf<List<TypeEntity>> (response, "response is List<TypeEntity>");
        }
        
        /// <summary>
        /// Test GetCandidateLocations
        /// </summary>
        [Test]
        public void GetCandidateLocationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetCandidateLocations();
            //Assert.IsInstanceOf<List<TypeEntity>> (response, "response is List<TypeEntity>");
        }
        
        /// <summary>
        /// Test GetCandidatePreferredEducationPhases
        /// </summary>
        [Test]
        public void GetCandidatePreferredEducationPhasesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetCandidatePreferredEducationPhases();
            //Assert.IsInstanceOf<List<TypeEntity>> (response, "response is List<TypeEntity>");
        }
        
        /// <summary>
        /// Test GetCountryTypes
        /// </summary>
        [Test]
        public void GetCountryTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetCountryTypes();
            //Assert.IsInstanceOf<List<TypeEntity>> (response, "response is List<TypeEntity>");
        }
        
        /// <summary>
        /// Test GetPastTeachingPositionEducationPhases
        /// </summary>
        [Test]
        public void GetPastTeachingPositionEducationPhasesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetPastTeachingPositionEducationPhases();
            //Assert.IsInstanceOf<List<TypeEntity>> (response, "response is List<TypeEntity>");
        }
        
        /// <summary>
        /// Test GetPhoneCallChannels
        /// </summary>
        [Test]
        public void GetPhoneCallChannelsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetPhoneCallChannels();
            //Assert.IsInstanceOf<List<TypeEntity>> (response, "response is List<TypeEntity>");
        }
        
        /// <summary>
        /// Test GetQualificationCategories
        /// </summary>
        [Test]
        public void GetQualificationCategoriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetQualificationCategories();
            //Assert.IsInstanceOf<List<TypeEntity>> (response, "response is List<TypeEntity>");
        }
        
        /// <summary>
        /// Test GetQualificationDegreeStatus
        /// </summary>
        [Test]
        public void GetQualificationDegreeStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetQualificationDegreeStatus();
            //Assert.IsInstanceOf<List<TypeEntity>> (response, "response is List<TypeEntity>");
        }
        
        /// <summary>
        /// Test GetQualificationTypes
        /// </summary>
        [Test]
        public void GetQualificationTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetQualificationTypes();
            //Assert.IsInstanceOf<List<TypeEntity>> (response, "response is List<TypeEntity>");
        }
        
        /// <summary>
        /// Test GetTeachingEventTypes
        /// </summary>
        [Test]
        public void GetTeachingEventTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetTeachingEventTypes();
            //Assert.IsInstanceOf<List<TypeEntity>> (response, "response is List<TypeEntity>");
        }
        
        /// <summary>
        /// Test GetTeachingSubjects
        /// </summary>
        [Test]
        public void GetTeachingSubjectsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetTeachingSubjects();
            //Assert.IsInstanceOf<List<TypeEntity>> (response, "response is List<TypeEntity>");
        }
        
    }

}
